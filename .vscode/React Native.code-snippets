{
	// Place your Sinope-Lithium workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"New StyleSheet": {
		"scope": "typescript",
		"prefix": "rnsy",
		"body": [
			"import { StyleSheet } from 'react-native';",
			"",
			"export const ${TM_FILENAME_BASE/(.*)\\..+?$/$1/}Styles = StyleSheet.create({",
			"\t$0",
			"});",
			""
		]
	},
	"New Component": {
		"scope": "typescriptreact",
		"prefix": "rnc",
		"body": [
			"import React from 'react';",
			"import { ${TM_FILENAME_BASE/(.*)\\..+?$/$1/}Styles as styles } from './${TM_FILENAME_BASE/(.*)\\..+?$/$1/}.styles';",
			"",
			"export const ${TM_FILENAME_BASE/(.*)\\..+?$/$1/}: React.FC = () => {",
			"\treturn (",
			"\t\t$0",
			"\t);",
			"}",
			""
		]
	},
	"New View": {
		"scope": "typescriptreact",
		"prefix": "rnv",
		"body": [
			"import { NavigationFunctionComponent } from 'react-native-navigation';",
			"",
			//https://code.visualstudio.com/docs/editor/userdefinedsnippets
			"export const ${TM_FILENAME_BASE/(.*)\\..+?$/$1/}View: NavigationFunctionComponent = () => {",
			"\treturn (",
			"\t\t$0",
			"\t);",
			"}",
			""
		]
	},
	"New Component store": {
		"scope": "typescriptreact",
		"prefix": "rnrx",
		"body": [
			"import { ${TM_FILENAME_BASE/(.*)\\..+?$/$1/}Styles as styles } from './${TM_FILENAME_BASE/(.*)\\..+?$/$1/}.styles';",
			"",
			"export const ${TM_FILENAME_BASE/(.*)\\..+?$/$1/}Model: React.FC = () => {",
			"\treturn (",
			"\t\t$0",
			"\t);",
			"}",
			""
		]
	}
}
